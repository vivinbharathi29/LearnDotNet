<%@ Language=VBScript %><% Option Explicit%><%	if request("FileType")= 1  or request("FileType")= 2  then		Response.ContentType = "application/vnd.ms-excel"	else		Response.Buffer = True		Response.ExpiresAbsolute = Now() - 1		Response.Expires = 0		Response.CacheControl = "no-cache"	end if%><HTML><HEAD><META NAME="GENERATOR" Content="Microsoft Visual Studio 6.0"><SCRIPT ID=clientEventHandlersJS LANGUAGE=javascript><!--  var oPopup = window.createPopup();
  var SelectedRow;
  function Export(strID) {
    if (txtCurrentFilter.value == "")
      window.open(window.location.href + "?FileType=" + strID);
    else
      window.open(window.location.pathname + "?" + txtCurrentFilter.value + "&FileType=" + strID);
  }
  function button1_onclick(NewColor) {
    //MyTable.borderColor = NewColor;
    Row1.bgColor = NewColor;
    Row2.bgColor = NewColor;
  }
  function button2_onclick() {
    COL1.style.width = 0;
    //COL1.width=10;
  }

  /* *** LY BEGINNING OF CHANGE - ADD DATE RANGE DIALOG TO BATTERY REPORT *** */
  function ChooseDates(StartDate, EndDate) {
    var strID = window.showModalDialog("../Query/daterange.asp?StartDate=" + StartDate + "&EndDate=" + EndDate, "", "dialogWidth:370px;dialogHeight:250px;edge: Sunken;center:Yes; help: No;resizable: Yes;status: No");
    if (typeof (strID) != "undefined") {
      window.location.href = "HardwareMatrix_BatteryReport.asp?lstCategory=71&DateStart=" + strID[0] + "&DateEnd=" + strID[1];
    }
  }
  /*  *** LY END OF CHANGE - ADD DATE RANGE DIALOG TO BATTERY REPORT *** */

  function Commodity_onclick() {
    var RowElement;
    RowElement = window.event.srcElement;
    while (RowElement.className != "Row") {
      RowElement = RowElement.parentElement;
    }
    if (RowElement.style.backgroundColor == "cornflowerblue")//lightgoldenrodyellow
      RowElement.style.backgroundColor = "";
    else
      RowElement.style.backgroundColor = "cornflowerblue"; //lightgoldenrodyellow
    if (typeof (SelectedRow) != "undefined") {
      if (SelectedRow != RowElement)
        SelectedRow.style.backgroundColor = "";
    }
    SelectedRow = RowElement;
  }
  function Commodity_onmouseover() {
    var RowElement;
    RowElement = window.event.srcElement;
    while (RowElement.className != "Row") {
      RowElement = RowElement.parentElement;
    }
    if (RowElement.style.backgroundColor == "") {
      RowElement.style.backgroundColor = "#99ccff";
      RowElement.style.cursor = "hand";
    }
  }
  function Commodity_onmouseout() {
    var RowElement;
    RowElement = window.event.srcElement;
    while (RowElement.className != "Row") {
      RowElement = RowElement.parentElement;
    }
    if (RowElement.style.backgroundColor == "#99ccff") {
      RowElement.style.backgroundColor = "";
    }
  }
  function DisplayVersion(VersionID) {
    var strResult;
    strResult = window.showModalDialog("../../WizardFrames.asp?Type=1&ID=" + VersionID, "", "dialogWidth:700px;dialogHeight:650px;edge: Sunken;center:Yes; help: No;maximize:Yes;resizable: Yes;status: No")
    if (typeof (strResult) != "undefined") {
      window.location.reload(true);
    }
    if (typeof (SelectedRow) != "undefined") {
      SelectedRow.style.backgroundColor = "";
    }
  }
  function SwitchFilterView(strType) {
    if (strType == 1) {
      QuickLinks.style.display = "none";
      FilterBox.style.display = "";
    }
    else if (strType == 2) {
      QuickLinks.style.display = "";
      FilterBox.style.display = "none";
    }
  }
  function window_onload() {
    lblLoad.style.display = "none";
    if (txtScrollToRow.value != "")
      document.all("Row" + txtScrollToRow.value).scrollIntoView();
    window.name = "HardwareMatrix";
    //self.focus();
  }
  function Test(ID) {
    DisplayArea.innerHTML = divQuickReports.innerHTML;
  }    //--></SCRIPT><% if request("FileType")<> 1  and request("FileType")<> 2  then%>	<LINK href="../../style/Excalibur.css" type="text/css" rel="stylesheet" ><% end if%></HEAD><STYLE>.CatRow TD{	FONT-SIZE:xx-small;	FONT-FAMILY:Verdana;	Background-COLOR=DarkSeaGreen;}.RootRow TD{	FONT-SIZE:xx-small;	FONT-FAMILY:Verdana;	Background-COLOR=#cccc99;}.HeaderRow TH{	FONT-SIZE:xx-small;	FONT-FAMILY:Verdana;	Background-COLOR=Beige;}TD{	FONT-SIZE:xx-small;	FONT-FAMILY:Verdana;}TH{	FONT-SIZE:xx-small;	TEXT-ALIGN: left;	FONT-FAMILY:Verdana;}A:visited{    COLOR: blue}A:hover{    COLOR: red}A{    COLOR: blue}</STYLE><BODY LANGUAGE=javascript onload="return window_onload()"><%if request("FileType")<> 1  and request("FileType")<> 2 then %>	<DIV ID=lblLoad>Loading. Please Wait...<BR><BR></DIV><%else%>	<font ID=Font1></font><%end if%><%' Response.Flush	dim cn	dim rs	dim rs2	dim strSQL	dim LastCategory	dim LastRoot	dim strDCR	dim strBaseSub	dim counter	dim ProductArray	dim ProductIDArray	dim ProductList	dim ExtraColumnCount	dim ProductIDList	dim ProductBuffer	dim strFilter	dim ColumnCount	dim strProduct	dim strSpin	dim strTestStatus	dim EOLBGColor	dim strEOLDate	dim strDCRTitle	dim rowCounter	dim strSQLSelect	dim strSQLSelectProdList	dim strSQLSelectFamilyList	dim strSQLSelectCatList	dim strSQLSelectDelList	dim strSQLSelectPhaseList	dim ProductLoop	dim ProductBuckets	dim strBucket	dim BucketParts	dim ProductSubArray	dim i	dim ShowFilters	dim ShowQuickLinks	dim strListHeaderName	dim CurrentUserID	dim cm	dim CurrentUser	dim p	dim FilterArray	dim blnAllowQuickFilters	dim strFullFilter	dim FilterValueArray	dim strCategory 	dim strRoot	dim strFamily	dim	strProducts 	dim TestDateBGColor	dim ScrollToRow	dim ProductCount	dim DCRCellCount	dim strQueryString	dim strQueryString2	dim strTestColor	dim strGreenSpecColor	dim strPilotStatus	dim strAccessoryStatus	dim strPilotColor	dim strAccessoryColor	dim StatusCellCount	dim strHistoryFilter	dim LastProduct	dim LastSub	dim blnFiltersSelected	dim LastSubassemblyBase	dim LastRootID	dim LastNativeBase    dim blnShowTestStep	    dim blnShowReleaseStep	    dim blnShowCompleteStep	    dim strStepFilter    dim strReportDateRange    dim BrandName    strReportDateRange = ""	lastSub = ""		' *** LY BEGINNING OF CHANGE - ADD DATE RANGE DIALOG TO BATTERY REPORT ***  	if request("lstCategory") = "" then    	dim strRedirect     	strRedirect = "HardwareMatrix_BatteryReport.asp?lstCategory=71"    	dim dt     	dt = DateAdd("m", -3, Date)    	strRedirect = strRedirect & "&DateStart=" & Month(dt) & "/" & Day(dt) & "/" & Year(dt)    	Response.Redirect(strRedirect)  	end if	' *** LY END OF CHANGE - ADD DATE RANGE DIALOG TO BATTERY REPORT ***	if request("chkTest") <> "on" and request("chkRelease") <> "on" and request("chkComplete") <> "on" then	    blnShowTestStep = false	    blnShowReleaseStep = false	    blnShowCompleteStep = true	else        if request("chkTest") = "on" then            blnShowTestStep = true        else            blnShowTestStep = false        end if        if request("chkRelease") = "on" then            blnShowReleaseStep = true        else            blnShowReleaseStep = false        end if        if request("chkComplete") = "on" then            blnShowCompleteStep = true        else            blnShowCompleteStep = false        end if	end if		if instr(lcase(trim(Request.Form)),"cboprofile")>0 then 		strQueryString = trim(FormatInputStrings())	else		strQueryString = trim(Request.QueryString)	end if			FilterArray = split(strQueryString,"&")	blnAllowQuickFilters = true	for each strFullFilter in FilterArray		FilterValueArray = split(strFullFilter,"=")		if ubound(FilterValueArray)<> 1 then			blnAllowQuickFilters = false			exit for		elseif lcase(trim(FilterValueArray(0))) <> "lstproducts" and lcase(trim(FilterValueArray(0))) <> "lstroot" and lcase(trim(FilterValueArray(0))) <> "lstsubassembly" and lcase(trim(FilterValueArray(0))) <> "lstcategory" and lcase(trim(FilterValueArray(0))) <> "lstphase" and lcase(trim(FilterValueArray(0))) <> "lstfamily" and lcase(trim(FilterValueArray(0))) <> "reportformat" then			blnAllowQuickFilters = false			exit for		elseif (not isnumeric(FilterValueArray(1))) or instr(FilterValueArray(1),",") > 0  or instr(FilterValueArray(1),";") > 0  or instr(FilterValueArray(1),":") > 0  or instr(FilterValueArray(1),".") > 0 then			blnAllowQuickFilters = false			exit for		end if	next			set cn = server.CreateObject("ADODB.Connection")	cn.ConnectionString = Session("PDPIMS_ConnectionString") 	cn.ConnectionTimeout = 60	cn.IsolationLevel=256	cn.commandtimeout = 60	cn.Open	set rs = server.CreateObject("ADODB.recordset")	set rs2 = server.CreateObject("ADODB.recordset")	'Get User	dim CurrentDomain	dim CurrentUserPartnerID	CurrentUser = lcase(Session("LoggedInUser"))	if instr(currentuser,"\") > 0 then		CurrentDomain = left(currentuser, instr(currentuser,"\") - 1)		Currentuser = mid(currentuser,instr(currentuser,"\") + 1)	end if	set cm = server.CreateObject("ADODB.Command")	Set cm.ActiveConnection = cn	cm.CommandType = 4	cm.CommandText = "spGetUserInfo"	Set p = cm.CreateParameter("@UserName", 200, &H0001, 80)	p.Value = Currentuser	cm.Parameters.Append p	Set p = cm.CreateParameter("@Domain", 200, &H0001, 30)	p.Value = CurrentDomain	cm.Parameters.Append p	rs.CursorType = adOpenForwardOnly	rs.LockType=AdLockReadOnly	Set rs = cm.Execute 		if not (rs.EOF and rs.BOF) then		CurrentUserID = rs("ID") & ""		CurrentUserPartnerID = rs("PartnerID") & ""	else		CurrentUserID = 0		CurrentUserPartnerID = 0	end if	rs.Close	if blnAllowQuickFilters then		ShowFilters = ""		ShowQuickLinks = "none"	else		ShowFilters = "none"		ShowQuickLinks = ""	end if		'Defined Selects	strSQLSelectProdList = "Select distinct pv.ID, pv.Dotsname "	strSQLSelectFamilyList = "Select distinct f.ID, f.Name "	strSQLSelectCatList = "Select distinct c.ID, c.Name "	strSQLSelectPhaseList = "Select distinct ps.id, ps.name as Phase "	if request("ReportFormat")="2" then		strSQLSelectDelList = "Select distinct r.ID, r.Name, pr.base as Subassembly "	elseif request("ReportFormat")="5" then		strSQLSelectDelList = "Select distinct r.ID, r.Name, coalesce(pr.servicebase,pr.base) as Subassembly "	else		strSQLSelectDelList = "Select distinct r.ID, r.Name, '' as Subassembly "	end if	strFilter=""		if CurrentUserPartnerID <> 1 then		strFilter = strFilter & " and pv.Partnerid in (" & clng(CurrentUserPartnerID) & ") " 	end if		if request("lstVendor") <> "" then		strFilter = strFilter & " and v.vendorid in (" & scrubsql(request("lstVendor")) & ") " 	end if		if strQueryString = "" or strQueryString = "ReportFormat=1" then		blnFiltersSelected = false	else		blnFiltersSelected = true	end if	if trim(request("cboRohs")) = "1" then		strFilter = strFilter & " and v.rohsid=1 " ' & clng(request("cboRohs")) & " "     elseif trim(request("cboRohs")) = "2" then		strFilter = strFilter & " and v.greenspecid=1 " '& clng(request("cboRohs")) & " " 	end if		if request("cboEOL") <> "" then		strFilter = strFilter & " and v.active= " & clng(request("cboEOL")) & " " 	end if		if request("lstPartner") <> "" then		strFilter = strFilter & " and pv.Partnerid in (" & scrubsql(request("lstPartner")) & ") " 	end if		if request("lstQualStatus") <> "" then	    if instr(request("lstQualStatus"),"-1") > 0 then    		strFilter = strFilter & " and (pd.TestStatusid in (" & scrubsql(request("lstQualStatus")) & ") or (pd.TestStatusid=5 and RiskRelease=1) ) "         else    		strFilter = strFilter & " and pd.TestStatusid in (" & scrubsql(request("lstQualStatus")) & ") " 	    end if	end if		if request("lstDevInput") <> "" then		strFilter = strFilter & " and pd.DeveloperNotificationStatus in (" & scrubsql(request("lstDevInput")) & ") " 	end if	if request("chkSCRestricted") <> "" then		strFilter = strFilter & " and pd.SupplyChainRestriction=1 " 	end if	if request("lstDevManager") <> "" then		strFilter = strFilter & " and r.DevManagerid in (" & scrubsql(request("lstDevManager")) & ") " 	end if	if request("lstCommodityPM") <> "" and request("lstCommodityPM") <> "0" then		strFilter = strFilter & " and pv.PDEID in (" & scrubsql(request("lstCommodityPM")) & ") " 	end if	if request("lstPhase") <> "" and request("lstPhase") <> "0" then		strFilter = strFilter & " and ps.ID in (" & scrubsql(request("lstPhase")) & ") " 	end if	if request("lstCategory") <> "" then		strFilter = strFilter & " and r.Categoryid in (" & scrubsql(request("lstCategory")) & ") " 	end if	if request("lstRoot") <> "" then		strFilter = strFilter & " and r.id in (" & scrubsql(request("lstRoot")) & ") " 	end if	if request("lstSubassembly") <> "" and request("ReportFormat")="2" then		strFilter = strFilter & " and pr.base in (" & scrubsql(request("lstSubassembly")) & ") " 	elseif request("lstSubassembly") <> "" and request("ReportFormat")="5"  then		strFilter = strFilter & " and ( (pr.servicebase is null and pr.base in (" & scrubsql(request("lstSubassembly")) & ")) or pr.servicebase in (" & scrubsql(request("lstSubassembly")) & ") ) " 	end if	'if request("lstFamily") <> "" then	'	strFilter = strFilter & " and pv.productfamilyid in (" & scrubsql(request("lstFamily")) & ") " 	'end if	strProducts = request("lstProducts")	if left(strProducts,1) = "," then		strProducts = mid(strProducts,2)	end if'*******Process Product Groups 	if request("lstProductGroups") <> "" then		dim ProductGroupsArray		dim ProductGroupArray		dim strProductGroup		dim lastProductGroup		dim strProductGroupFilter		dim strCycleList		dim strGroupSQL		ProductGroupsArray = split(request("lstProductGroups"),",")		lastProductGroup = 0		strProductGroupFilter = ""		strCycleList = ""        strGroupSQL = ""		for each strProductGroup in ProductGroupsArray			if instr(strProductGroup,":")>0 then				ProductGroupArray = split(strProductGroup,":")				if trim(lastproductgroup) <> "0" and trim(ProductGroupArray(0)) <> "2" and lastproductgroup <> trim(ProductGroupArray(0)) then					strProductGroupFilter = strProductGroupFilter & " ) and  "				end if				if trim(lastproductgroup) <> trim(ProductGroupArray(0)) then					if trim(ProductGroupArray(0)) = "1" then						strProductGroupFilter = strProductGroupFilter & " ( partnerid = " & trim(ProductGroupArray(1))						lastproductgroup = trim(ProductGroupArray(0))					elseif trim(ProductGroupArray(0)) = "2" then						strCycleList = strCycleList & "," & clng(ProductGroupArray(1))					elseif trim(ProductGroupArray(0)) = "3" then						strProductGroupFilter = strProductGroupFilter & " ( devcenter = " & trim(ProductGroupArray(1))						lastproductgroup = trim(ProductGroupArray(0))					elseif trim(ProductGroupArray(0)) = "4" then						strProductGroupFilter = strProductGroupFilter & " ( productstatusid = " & trim(ProductGroupArray(1))						lastproductgroup = trim(ProductGroupArray(0))					end if				else					if trim(ProductGroupArray(0)) = "1" then						strProductGroupFilter = strProductGroupFilter & " or partnerid = " & trim(ProductGroupArray(1))						lastproductgroup = trim(ProductGroupArray(0))					elseif trim(ProductGroupArray(0)) = "2" then						strCycleList = strCycleList & "," & clng(ProductGroupArray(1))					elseif trim(ProductGroupArray(0)) = "3" then						strProductGroupFilter = strProductGroupFilter & " or devcenter = " & trim(ProductGroupArray(1))						lastproductgroup = trim(ProductGroupArray(0))					elseif trim(ProductGroupArray(0)) = "4" then						strProductGroupFilter = strProductGroupFilter & " or productstatusid = " & trim(ProductGroupArray(1))						lastproductgroup = trim(ProductGroupArray(0))					end if				end if			end if		next		    if strProductGroupFilter <> "" then			    strGroupSQl = strGroupSQL & " and ( " & ScrubSQL(strProductGroupFilter) &  ") ) "		    end if		    if strCycleList <> "" then			    strGroupSQl = strGroupSQL & " and id in (Select ProductVersionid from product_program with (NOLOCK) where programid in (" & mid(strCycleList,2) &  ")) "		    end if		    if strGroupSQl <> "" then		        strGroupSQl = mid(strGroupSQL,5)		        rs.open "Select ID from productversion with (NOLOCK) where " & strgroupSQL,cn		        do while not rs.eof	                strProducts = strProducts & ", " & rs("ID") 		            rs.movenext		        loop		        rs.close    		    end if		    if strProducts = ""  then 	            strProducts = "0"	        elseif left(strproducts,2) = ", " then	            strproducts = mid(strproducts,3) 	        end if	end if'*******End Product Groups	if strProducts <> "" then		strFilter = strFilter & " and pv.id in (" & scrubsql(strProducts) & ",0) " 	else		strFilter = strFilter & " and pv.id <> 100 and pv.oncommoditymatrix=1 and pv.productstatusid<5 " 'Only show products specified as On the Matrix if no products are specifically selected	end if		if request("lstTeamID") <> "" then		strFilter = strFilter & " and c.teamid in (" & scrubsql(request("lstTeamID")) & ") " 	end if		if trim(request("txtAdvanced")) <> "" then		strFilter = strFilter & " and ( " & scrubsql(request("txtAdvanced")) & " ) " 	end if		if request("txtCompleteDateStart") <> "" and request("txtCompleteDateEnd") <> "" then		if isdate(request("txtCompleteDateStart")) and isdate(request("txtCompleteDateEnd")) then			strFilter = strFilter & " and pd.teststatusid = 3 and pd.TestDate between '" & request("txtCompleteDateStart") & "' and '" & request("txtCompleteDateEnd") & "' "		end if	end if		if request("ReportSplit") = "1" then		strFilter = strFilter & " and upper(pv.dotsname) >= 'A'  and upper(pv.dotsname) < 'N' " 	elseif request("ReportSplit") = "2" then		strFilter = strFilter & " and upper(pv.dotsname) >= 'N' " 	end if		if request("chkChangeType") <> "" then		strHistoryFilter = " and pd.id in (" & BuildHistoryFilter() & ") "	else 		strHistoryFilter = ""	end if	    if blnShowCompleteStep or  blnShowReleaseStep or blnShowTestStep then    	strFilter = strFilter & " and v.status <> 5 and v.location not like 'Development%' and (pd.teststatusid <> 1 or ( pd.teststatusid = 1 and pd.DeveloperNotificationStatus=1) ) "        strStepFilter = ""        if blnShowCompleteStep then            strStepFilter = " location like '%Workflow Complete%' "        end if        if blnShowReleaseStep and strStepFilter = "" then            strStepFilter = " location like '%Core Team%' "        elseif blnShowReleaseStep then            strStepFilter = strStepFilter & " or location like '%Core Team%' "        end if        if blnShowTestStep and strStepFilter = "" then            strStepFilter = " (location like '%Engineering%' or location like '%Eng. Dev%') "        elseif blnShowReleaseStep then            strStepFilter = strStepFilter & " or (location like '%Engineering%' or location like '%Eng. Dev%') "        end if        if strStepFilter <> "" then            strFilter = strFilter & " and ( " & strStepFilter & " ) "        end if	else	    strFilter = strFilter & " and (pd.teststatusid <> 1 or ( pd.teststatusid = 1 and pd.DeveloperNotificationStatus=1 and v.location like '%Workflow Complete%') ) "    end if    '	strFilter = strFilter & " and (v.location like '%Workflow Complete%') "		if request("HighlightRow") <> "" then		if strFilter = "" then			strFilter = strFilter & " and v.id in ( " & scrubsql(request("HighlightRow")) & " ) "		else			strFilter = " and (v.id in ( " & scrubsql(request("HighlightRow")) & " ) or ( " 	& mid(strFilter,5) & " )) "		end if	end if		'Build Base SQL			strSQLSelect = "Select Distinct pv.id as ProdVerID, v.location,v.sampledate, pv.Dotsname, pd.targetnotes, pd.riskrelease, gs.MatrixBGColor as GreenSpecBGColor,p.MatrixBGColor as PilotBGColor, t.MatrixBGColor, v.id as DeliverableVersionID, v.Serviceactive, v.active, v.serviceeoadate, v.endoflifedate as EOLDate, r.id as RootID, c.ID as CategoryID, v.assemblycode, cv.suppliercode as suppliercode, v.leadfree, v.greenspecid, v.rohsid, c.name as category, r.name as DeliverableName, pd.testconfidence, pd.productversionid, '' as DCRSummary, '' as SubAssembly, '' as subassemblySpin, '' as subassemblyBase, p.Name as PilotStatus, pd.PilotDate as PilotDate,  t.status as TestStatus, pd.TestDate, vd.name as Vendor, v.version, v.revision,v.pass,v.partnumber,v.ModelNumber, pd.DCRID, v.endoflifedate, r.Name as VersionDeliverableName, gs.name as greenSpec, rh.name as RoHS "'LY  *** LY BEGINNING OF CHANGE - ADD DATE RANGE DIALOG TO BATTERY REPORT ***'LY 	strSQL = "from deliverableroot r with (NOLOCK), deliverableversion v with (NOLOCK), product_deliverable pd with (NOLOCK), vendor vd with (NOLOCK), productversion pv with (NOLOCK),productstatus ps with (NOLOCK), pilotstatus p with (NOLOCK), teststatus t with (NOLOCK), deliverablecategory c with (NOLOCK), productfamily f with (NOLOCK), DeliverableCategory_Vendor cv with (NOLOCK), greenspec gs with (NOLOCK), rohs rh with (NOLOCK) " & _'LY 			"where r.id = v.deliverablerootid " & _'LY 			"and c.id = r.categoryid " & _'LY 			"and f.id = pv.productfamilyid " & _'LY 			"and cv.DeliverableCategoryID =* c.id  " & _'LY 			"and cv.Vendorid =* vd.id " & _'LY 			"and v.id = pd.deliverableversionid " & _'LY 			"and vd.id = v.vendorid " & _'LY 			"and gs.id = v.greenspecid " & _'LY 			"and rh.id = v.rohsid " & _'LY 			"and t.id = pd.teststatusid " & _'LY 			"and ps.id = pv.productstatusid " & _'LY 			"and p.id = pd.pilotstatusid " & _'LY 			"and vd.id=v.vendorid " & _'LY 			"and pv.id = pd.productversionid " & _'LY 			"and pv.typeid in (1,3) " & _'LY 			"and r.rootfilename <> 'LY HFCN'LY  "'LY  *** LY END OF CHANGE - ADD DATE RANGE DIALOG TO BATTERY REPORT ***		strSQL = " FROM dbo.DeliverableRoot AS r WITH (NOLOCK) " & _      " INNER JOIN      dbo.DeliverableVersion AS v WITH (NOLOCK) ON r.ID = v.DeliverableRootID  " & _	    " INNER JOIN      dbo.Product_Deliverable AS pd WITH (NOLOCK) ON v.ID = pd.DeliverableVersionID " & _	    " INNER JOIN      dbo.ProductVersion AS pv WITH (NOLOCK) ON pv.ID = pd.ProductVersionID " & _  	    " INNER JOIN      dbo.ProductStatus AS ps WITH (NOLOCK) ON pv.ProductStatusID = ps.ID " & _		  " INNER JOIN      dbo.TestStatus AS t WITH (NOLOCK) ON pd.TestStatusID = t.ID  " & _      " INNER JOIN      dbo.pilotstatus p with (NOLOCK) ON  pd.pilotstatusid =p.id  " & _	    " INNER JOIN      dbo.DeliverableCategory AS c WITH (NOLOCK) ON r.CategoryID = c.ID   " & _	    " INNER JOIN      dbo.ProductFamily AS f WITH (NOLOCK) ON f.ID = pv.ProductFamilyID  " & _		  " INNER JOIN      dbo.Vendor AS vd WITH (NOLOCK)  on vd.ID = v.VendorID  " & _		  " INNER JOIN      dbo.GreenSpec AS gs WITH (NOLOCK)  ON gs.ID = v.GreenSpecID " & _      " INNER JOIN      dbo.RoHS AS rh WITH (NOLOCK) ON v.RoHSID = rh.ID   " & _		  " LEFT OUTER JOIN dbo.DeliverableCategory_Vendor AS cv WITH (NOLOCK)  ON c.ID = cv.DeliverableCategoryID AND  vd.ID = cv.VendorID " & _      " INNER JOIN dbo.ActionLog AS l WITH (NOLOCK) ON v.ID = l.DeliverableVersionID And l.ActionID = 21" & _      " WHERE pv.typeid in (1,3)   " & _      " AND r.rootfilename <> 'HFCN'  "    	if request("FullReport") = "1" then		strSQl = strSQL & " and c.commodity=1 and pv.typeid in (1) and pv.productstatusid<4 " 	else		strSQl = strSQL & " and r.typeid=1 " 	end if				if request("chkChangeType") = "" then			strSQl = strSQl & " and pd.teststatusid <> 0 " 	end if		' *** LY BEGINNING OF CHANGE - ADD DATE RANGE DIALOG TO BATTERY REPORT ***  'LY response.Write "<hr>strSQL:<br>" & strSQL & "<br>" ' *** LY END OF CHANGE - ADD DATE RANGE DIALOG TO BATTERY REPORT ***	strSQl = strSQL & strFilter & strHistoryFilter' *** LY BEGINNING OF CHANGE - ADD DATE RANGE DIALOG TO BATTERY REPORT ***  'LY response.Write "<hr>strFilter:<br>" & strFilter & "<br>"   'LY response.Write "<hr>strHistoryFilter:<br>" & strHistoryFilter & "<br>"   'LY response.Write "<hr>" ' *** LY END OF CHANGE - ADD DATE RANGE DIALOG TO BATTERY REPORT ***	dim strPVDate	dim strSI1Date	dim strSI2Date	dim strDateOffset	dim strMilestoneOffsetBGColor	    strSI1Date = ""    strSI2Date = ""    strPVDate = ""    strMilestoneOffsetBGColor = ""    	if i = 1 then	    rs.Open "spGetProductMilestoneDate " & clng(mid(ProductIDList,2)) & ", 18"	    if not (rs.EOF and rs.BOF) then	        strSI1Date = rs("MilestoneDate")	    end if	    rs.Close	    rs.Open "spGetProductMilestoneDate " & clng(mid(ProductIDList,2)) & ", 25"	    if not (rs.EOF and rs.BOF) then	        strSI2Date = rs("MilestoneDate")	    end if	    rs.Close	    rs.Open "spGetProductMilestoneDate " & clng(mid(ProductIDList,2)) & ", 32"	    if not (rs.EOF and rs.BOF) then	        strPVDate = rs("MilestoneDate")	    end if	    rs.Close	end if%>	<table width=100% border=0>		<tr><TD valign=top colspan=6>			<font size=3 face=verdana><b>Hardware Qualification Report</b></font>			</tr></table>					<%	if strQueryString = "" or strQueryString = "ReportFormat=2" or strQueryString = "ReportFormat=5" or strQueryString = "ReportFormat=3" or strQueryString = "ReportFormat=4" or strQueryString = "ReportFormat=1" then 'No filters selected except possible reportformat		'if blnAllowQuickFilters then		'	DrawFilterBox CurrentUserID,ShowFilters		'end if		Response.Write "<font size=2 face=verdana><b>Please select a filter to continue.</b></font>"		Response.Write "<BR><BR><BR>"	else		dim strExportLink		'if blnAllowQuickFilters then		'   DrawFilterBox CurrentUserID,ShowFilters		'end if			ProductList = mid(ProductList,2)		ProductIDList = mid(ProductIDList,2)		ProductArray = split(ProductList,",")		ProductIDArray = split(ProductIDList,",")		ProductBuckets = split(ProductIDList,",")		ProductSubArray = split(ProductIDList,",")				ProductCount = ubound(ProductArray) + 1		if ProductCount = 1 then			DCRCellCount = 1			if request("ReportFormat") = "3" or request("ReportFormat") = "4" then				StatusCellCount = 1			else				StatusCellCount = 0			end if		else			DCRCellCount = 0			StatusCellCount = 0		end if		%>    <%      ' *** LY BEGINNING OF CHANGE - ADD DATE RANGE DIALOG TO BATTERY REPORT ***      dim DateRangeStart      dim DateRangeEnd      dim strDateRange		  if request("DateStart") <> "" and isdate(request("DateStart")) then			  DateRangeStart = request("DateStart")		  else			  DateRangeStart = ""		  end if		  if request("DateEnd") <> "" and isdate(request("DateEnd")) then			  DateRangeEnd = request("DateEnd")			  if DateRangeStart <> "" then				  if datediff("d",DateRangeStart,DateRangeEnd) < 0 then					  TempDate = DateRangeEnd					  DateRangeEnd = DateRangeStart					  DateRangeStart = TempDate				  end if			  end if		  else			  DateRangeEnd = ""		  end if				  strDateRange = "All"		  if DateRangeEnd <> "" and DateRangeStart <> "" then			  strDateRange = DateRangeStart & " - " & DateRangeEnd		  elseif DateRangeEnd <> "" then			  strDateRange = "Before " & DateRangeEnd		  elseif DateRangeStart <> "" then			  strDateRange = "After " & DateRangeStart		  end if			Response.Write "<font size=2 face=verdana>Date Range: " & "<a href=""javascript: ChooseDates('" & DateRangeStart & "','" & DateRangeEnd & "')"">" & strDateRange & "</a><BR></font>"      strSQL = strSQL & AddDateRangeToQuery()      ' *** LY END OF CHANGE - ADD DATE RANGE DIALOG TO BATTERY REPORT ***    %>						<%ColumnCount = 14 'DCRCellCount + ColumnCount + ubound(ProductArray) + StatusCellCount      '  if currentuserid = 31 then      '      response.write strSQLSelect & " " & strSQL & " order by pv.Dotsname, c.name, r.name, vd.name, v.id;"      '  end if      ' *** LY BEGINNING OF CHANGE - ADD DATE RANGE DIALOG TO BATTERY REPORT ***    	'LY response.Write "<hr>FULL QUERY:<br>" & strSQLSelect & strSQL & "<br><hr>"       ' *** LY END OF CHANGE - ADD DATE RANGE DIALOG TO BATTERY REPORT ***		rs.Open	strSQLSelect & " " & strSQL & " order by pv.Dotsname, c.name, r.name, vd.name, v.id;", cn,adOpenForwardOnly		LastProduct = ""		LastCategory = ""		LastRoot=""		counter = 1		rowCounter = 0		ProductLoop = 0			do while not rs.EOF			rowCounter = rowCounter + 1		    if (LastProduct <> rs("Dotsname")) then		        if (rowCounter > 1) then		            Response.Write "</TABLE>"		        end if		        BrandName = ""		        rs2.Open "usp_GetAllBrandNamesByProductVersion " & rs("ProdVerID"), cn                do until rs2.EOF                    if (BrandName = "") Then                        BrandName = rs2("Name")                    Else                        BrandName = BrandName & " | " & rs2("Name")                    End If                                        rs2.MoveNext                loop                rs2.Close                Response.Write "<br /><div><font size=2 face=verdana><b>" & rs("Dotsname") & ":</b> " & BrandName & "</font></div><br />"                'Response.Write "<br /><div><font size=2 face=verdana><b>" & rs("Dotsname") & "</b></font></div><br />"		        Response.Write "<TABLE bgcolor=Ivory width=100% ID=MyTable border=1 cellspacing=0 cellpadding=2 bordercolor=gainsboro>"		        Response.Write "<TR class=HeaderRow>" 		        Response.Write "<TH>ID</TH>"		        Response.Write "<TH>Supplier</TH>"		        Response.Write "<TH>Model</TH>"		        Response.Write "<TH>Part</TH>"		        Response.Write "<TH nowrap>Qual&nbsp;Status</TH>"		        Response.Write "<TH>Comments</TH>"		        Response.Write "</TR>"                LastProduct = rs("Dotsname")		        LastCategory = ""		        LastRoot=""		    end if				if LastCategory <> rs("CategoryID") then				Response.Write "<TR bgcolor=SeaGreen class=CatRow><TD colspan=" & ColumnCount & ">" & rs("Category") & "</TD></tr>"				LastCategory= rs("CategoryID")			end if			if (LastRoot <> rs("RootID")) then				extracolumncount=0				Response.Write "<TR bgcolor=Burlywood class=RootRow><TD colspan=14>" & rs("RootID") & "&nbsp;-&nbsp;" & rs("DeliverableName") & "</TD></tr>" 'LightSteelBlue				LastRoot= rs("RootID")				LastSub = rs("subassemblyBase") & ""				counter=counter+1			end if						if rs("DCRID") > 2 then				strDCR = "DCR:&nbsp;" & rs("DCRID")			elseif rs("DCRID")=2 then				strDCR = "HFCN"			elseif rs("DCRID")=1 then				strDCR = "POR"			else				strDCR = "&nbsp;"			end if						if isnull(rs("EOLDate")) and rs("Active") then				EOLBGColor = ""			elseif datediff("d",rs("EndOfLifeDate"),Now)>=-120 and datediff("d",rs("EndOfLifeDate"),Now)<0 then				EOLBGColor="#ffff99"			elseif DateDiff("d",rs("EOLDate"),Now()) > 0 or (not rs("Active")) then				EOLBGColor = "salmon"			else				EOLBGColor = ""			end if			if (not rs("Active")) and rs("ServiceActive") then				strEOLDate = "Service&nbsp;Only"			elseif (not rs("Active")) and (not rs("ServiceActive")) then				strEOLDate = "Unavailable"			else				strEOLDate = rs("EndOfLifeDate")			end if						strDCRTitle = ""			if  instr("," & replace(request("HighlightRow")," ","") & ",","," & trim(rs("Deliverableversionid")) & ",") > 0 then				response.write "<TR bgcolor=Plum  ID=Row" & rowcounter & " class=Row LANGUAGE=javascript onmouseover=""return Commodity_onmouseover()"" onmouseout=""return Commodity_onmouseout()"" onclick=""return Commodity_onclick()"">"				ScrollToRow = rowcounter			else				response.write "<TR ID=Row" & rowcounter & " class=Row LANGUAGE=javascript onmouseover=""return Commodity_onmouseover()"" onmouseout=""return Commodity_onmouseout()"" onclick=""return Commodity_onclick()"">"			end if			if request("FileType")="" then				response.write "<TD><a target=_blank href=""../../Query/DeliverableVersionDetails.asp?ID=" & rs("DeliverableVersionID") & """>" & rs("DeliverableVersionID") & "</a></TD>"			else				response.write "<TD>" &  rs("DeliverableVersionID") &  "</TD>"			end if			strGreenSpecColor = trim(lcase(rs("GreenSpecBGColor") & ""))			if trim(rs("SupplierCode") & "") = "" or trim(rs("SupplierCode") & "") = "TBD"  then				response.write "<TD nowrap>" & rs("vendor") & "</TD>"			else				response.write "<TD nowrap>" & rs("vendor") & " (" & rs("supplierCode") & ")</TD>"			end if			response.write "<TD>" & server.htmlencode(rs("ModelNumber")& "") & "</TD>"			response.write "<TD nowrap>" & rs("PartNumber") & "&nbsp;</TD>"				strTestStatus = ""			strPilotStatus = ""			strTestColor = ""			strGreenSpecColor = ""			strPilotColor = ""			if rs("TestStatus") = "Date" then				strTestStatus = rs("TestDate")			elseif rs("TestStatus") = "QComplete" and rs("RiskRelease") then				strTestStatus = "Risk&nbsp;Release"				elseif  rs("TestStatus") = "Investigating" and (blnShowTestStep or blnShowReleaseStep) then				if lcase(left(rs("location") & "",9)) = "core team" then				    strTestStatus = "Core&nbsp;Team"				elseif lcase(left(rs("location") & "",11)) = "engineering" or lcase(left(rs("location") & "",8)) = "eng. dev" then				    strTestStatus = "Engineering"				else				    strTestStatus = "Investigating"				end if			elseif (request("ReportFormat") = "1" or request("ReportFormat") = "" or request("ReportFormat") = "2" or request("ReportFormat") = "3") and lcase(trim(rs("TestStatus"))) = "service only" then				strTestStatus = "Dropped"			else				strTestStatus = rs("TestStatus")			end if						if rs("TestStatus") = "Date" or rs("TestStatus") = "OOC" or rs("TestStatus") = "FCS" then				if rs("TestConfidence") = 3 then					strTestColor = "salmon"				elseif rs("TestConfidence") = 2 then					strTestColor = "#ffff99"				else					strTestColor = ""				end if			end if							if	strTestColor = "" then				strTestColor = trim(lcase(rs("MatrixBGColor") & ""))			end if						if request("FileType") <> "" and strTestcolor = "darkseagreen" then				strTestColor = "SeaGreen"			elseif request("FileType") <> "" and strTestcolor = "lightsteelblue" then				strTestColor = "LightSkyBlue"			end if				            response.Write "<TD bgcolor=""" & strTestColor & """ align=center>" & strTestStatus & "</TD>"            response.Write "<TD nowrap>" & rs("TargetNotes") & "&nbsp;</TD></TR>"			rs.MoveNext		loop		rs.Close		        Response.Write "</TABLE>"	end if '****************		set rs = nothing	cn.close	set cn = nothing%><% if request("FileType")<> 1  and request("FileType")<> 2  then%>	<%		if Request.QueryString = "" then			strQueryString2 = ""		else			strQueryString2 = "&" & Request.QueryString		end if	%><BR><%end if%><INPUT type="hidden" id=txtCurrentFilter name=txtCurrentFilter value="<%=replace(strQueryString,"+","%2B")%>"><INPUT type="hidden" id=txtScrollToRow name=txtScrollToRow value="<%=ScrollToRow%>"><%if rowCounter= 0 and not (strQueryString = "" or strQueryString = "ReportFormat=1" or strQueryString = "ReportFormat=2" or strQueryString = "ReportFormat=5" or strQueryString = "ReportFormat=3" or strQueryString = "ReportFormat=4") then%><font size=3 face=verdana><BR><BR>No commodities found matching your filter criteria.</font><%end if%><%'	if currentuserid = 31 then'		Response.Write Request.Form'	end if%></BODY></HTML><% function BuildHistoryFilter()	dim SpecificStatusArray	dim strSpecificPilotStatus	dim strSpecificQualStatus	dim strTempSQL    dim strDateRange			if request("txtSpecificPilotStatus") <> "" and instr(request("txtSpecificPilotStatus"),":") > 0 and instr(request("chkChangeType"),"22") > 0  then				SpecificStatusArray = split(request("txtSpecificPilotStatus"),":")				strSpecificPilotStatus = ""				if trim(SpecificStatusArray(0)) <> "" then					strSpecificPilotStatus = strSpecificPilotStatus & " and l.FromID in (" & SpecificStatusArray(0) & ") "				end if				if trim(SpecificStatusArray(1)) <> "" then					strSpecificPilotStatus =  strSpecificPilotStatus & " and l.ToID in (" & SpecificStatusArray(1) & ") "				end if			else				strSpecificPilotStatus = ""			end if			if request("txtSpecificQualStatus") <> "" and instr(request("txtSpecificQualStatus"),":") > 0 and instr(request("chkChangeType"),"21") > 0 then				SpecificStatusArray = split(request("txtSpecificQualStatus"),":")				strSpecificQualStatus = ""				if trim(SpecificStatusArray(0)) <> "" then					strSpecificQualStatus = strSpecificQualStatus & " and l.FromID in (" & SpecificStatusArray(0) & ") "				end if				if trim(SpecificStatusArray(1)) <> "" then					strSpecificQualStatus =  strSpecificQualStatus & " and l.ToID in (" & SpecificStatusArray(1) & ") "				end if			else				strSpecificQualStatus = ""			end if            dim strStartDate            dim strEndDate            dim tmpDate            if true  then 	            if request("cboHistoryRange") = "Range" then		            if request("txtStartDate") = "" then			            strStartDate = formatdatetime("1/1/1970",vbshortdate)		            else			            strStartDate =  scrubsql(request("txtStartDate"))		            end if                    if request("txtEndDate") = "" then                        strEndDate = formatdatetime(now,vbshortdate)                    else                        strEndDate =  scrubsql(request("txtEndDate"))                    end if                    if datediff("d",strStartDate,strEndDate)< 0 then                        'Switch them around if the end is before the start			            tmpDate = strStartDate			            strStartDate = strEndDate			            strEndDate = tmpDate		            end if	            else		            tmpDate = formatdatetime(dateadd("d",clng("-" & request("txtHistoryDays")),now),vbshortdate)		            if request("cboHistoryRange") = "=" then			            strStartDate = tmpDate			            strEndDate = tmpDate		            elseif request("cboHistoryRange") = ">=" then			            strStartDate = "1/1/1970"			            strEndDate = tmpDate		            else			            strStartDate = tmpDate			            strEndDate = formatdatetime(Now,vbshortdate)		            end if	            end if	            else                strStartDate = request("txtStartDate")                strEndDate = request("txtEndDate")            end if    	    if strStartDate <> "1/1/1970" then	            strReportDateRange = "<br><br><font size=1 face=verdana>" & strStartDate & " - " & strEndDate & "<BR><BR></font>"            else	            strReportDateRange = "<br><br><font size=1 face=verdana>Before " & strEndDate & "<BR><BR></font>"	        end if            strDateRange = " l.Updated between '" & cdate(strStartDate) & "' and '" & Dateadd("d",1,cdate(strEndDate)) & "' "		    strTempSQL = ""			if instr(request("chkChangeType"),"21") > 0 then				strTempSQL = strTempSQL & " Union Select pd.id from Actions a with (NOLOCK), ActionLog l with (NOLOCK), ProductVersion p with (NOLOCK), vendor vd with (NOLOCK), deliverableversion v with (NOLOCK), deliverableroot r with (NOLOCK), TestStatus t1 with (NOLOCK), TestStatus t2 with (NOLOCK), product_deliverable pd with (NOLOCK) where pd.productversionid = p.id and pd.deliverableversionid = v.id and " & strDateRange & " " & strSpecificQualStatus & " and t1.id = l.FromID and t2.id = l.ToID and r.id = v.deliverablerootid and a.actionid = l.actionid and v.id = l.deliverableversionid and vd.id = v.vendorid and l.productversionid = p.id and l.actionid in(21) "			end if			if instr(request("chkChangeType"),"22") > 0 then				strTempSQL = strTempSQL & " Union Select pd.id from Actions a with (NOLOCK), ActionLog l with (NOLOCK), ProductVersion p with (NOLOCK), vendor vd with (NOLOCK), deliverableversion v with (NOLOCK), deliverableroot r with (NOLOCK), PilotStatus t1 with (NOLOCK), PilotStatus t2 with (NOLOCK), product_deliverable pd with (NOLOCK) where pd.productversionid = p.id and pd.deliverableversionid = v.id and " & strDateRange & " " & strSpecificPilotStatus & " and t1.id = l.FromID and t2.id = l.ToID and r.id = v.deliverablerootid and a.actionid = l.actionid and v.id = l.deliverableversionid and vd.id = v.vendorid and l.productversionid = p.id and l.actionid in (22) "			end if			if strTempSQL <> "" then				strTempSQL = mid(strTempSQL,8)			end if					BuildHistoryFilter = strTempSQL	end functionsub DrawFilterBox (CurrentUserID, ShowFilters)	dim LoopCount	dim strNewQueryString	dim strFilterPath	dim FilterArray	dim strFilter	dim strPathSoFar	dim strFilterName	dim FilterValueArray	dim i	dim strNewString		FilterArray = split(strQueryString,"&")	strFilterPath = ""	i=0	for each strFilter in FilterArray		FilterValueArray=split(strFilter,"=")		if ubound(FilterValueArray) = 1 then			if strPathSoFar = "" then				strPathSoFar = strPathSoFar & strFilter			else				strPathSoFar = strPathSoFar & "&" & strFilter			end if			if lcase(FilterValueArray(0)) = "lstproducts" and isnumeric(FilterValueArray(1)) then				rs.Open "Select DotsName from productversion with (NOLOCK) where id = " & FilterValueArray(1),cn,adOpenForwardOnly				if rs.EOF and rs.BOF then					strFilterName = "Invalid Product Specified"				else					strFilterName = rs("DotsName")				end if				rs.Close				elseif lcase(FilterValueArray(0)) = "lstfamily" and isnumeric(FilterValueArray(1)) then				rs.Open "Select Name from productfamily with (NOLOCK) where id = " & FilterValueArray(1),cn,adOpenForwardOnly				if rs.EOF and rs.BOF then					strFilterName = strFilter				else					strFilterName = rs("Name")				end if				rs.Close				elseif lcase(FilterValueArray(0)) = "lstcategory" and isnumeric(FilterValueArray(1)) then				rs.Open "Select Name from deliverablecategory with (NOLOCK) where id = " & FilterValueArray(1),cn,adOpenForwardOnly				if rs.EOF and rs.BOF then					strFilterName = strFilter				else					strFilterName = rs("Name")				end if				rs.Close				elseif lcase(FilterValueArray(0)) = "lstroot" and isnumeric(FilterValueArray(1)) then				'if request("ReportFormat")="2" then				'	rs.Open "Select Subassembly as Name from deliverableroot where id = " & FilterValueArray(1),cn,adOpenForwardOnly				'else					rs.Open "Select Name from deliverableroot with (NOLOCK) where id = " & FilterValueArray(1),cn,adOpenForwardOnly				'end if				if rs.EOF and rs.BOF then					strFilterName = strFilter				else					strFilterName = rs("Name")				end if				rs.Close				elseif lcase(FilterValueArray(0)) = "lstphase" and isnumeric(FilterValueArray(1)) then				rs.Open "Select Name from productstatus with (NOLOCK) where id = " & FilterValueArray(1),cn,adOpenForwardOnly				if rs.EOF and rs.BOF then					strFilterName = strFilter				else					strFilterName = rs("Name")				end if				rs.Close				elseif lcase(FilterValueArray(0)) = "lstsubassembly" and isnumeric(FilterValueArray(1)) then				'rs.Open "Select Subassembly as Name from deliverableroot where id = " & FilterValueArray(1),cn,adOpenForwardOnly				'if rs.EOF and rs.BOF then			'		strFilterName = strFilter			'	else					strFilterName = FilterValueArray(1)			'	end if			'	rs.Close				elseif lcase(FilterValueArray(0)) = "reportformat" then				if ubound(FilterValueArray) > 0 then					if trim(lcase(FilterValueArray(1))) = "5" then						strFilterName = "Service"					elseif trim(lcase(FilterValueArray(1))) = "4" then						strFilterName = "Accessory"					elseif trim(lcase(FilterValueArray(1))) = "3" then						strFilterName = "Pilot Run"					elseif trim(lcase(FilterValueArray(1))) = "2" then						strFilterName = "Subassembly"					else						strFilterName = "Qualification"					end if				else					strFilterName = "Unknown Filter"				end if			end if						if i = ubound(FilterArray) then				strFilterPath = strFilterPath & " > " & "<b>" & strFilterName & "</b>"			else					strFilterPath = strFilterPath & " > " & "<a href=""HardwareMatrix.asp?" & strPathSoFar & """>" & strFilterName & "</a>"			end if			i=i+1		end if	next	Response.Write "<div style=""display:" & showFilters & """ ID=FilterBox>"		if strFilterPath <> "" then		Response.Write "<font size=1 face=verdana><BR><a href=""HardwareMatrix.asp"">Home</a> " & strFilterPath & "<BR></font>"	end if	Response.Write "<BR><table class=""DisplayBar"" cellspacing=0 cellpadding=2><TR><TD valign=top><table><tr><td valign=top><font color=navy face=verdana size=2><b>Display:&nbsp;&nbsp;&nbsp;</b></font></td></tr></table>"	Response.Write "<td width=""100%"">"	Response.Write "<table cellpadding=2 cellspacing=0  width=""100%"">"	if isnumeric(request("lstFamily")) and request("lstFamily") <> "" then		'Product Versions		Response.Write "<TR>"		Response.Write "<TD valign=top><font size=1 face=verdana><b>Product&nbsp;Version:&nbsp;</b></font></TD><TD valign=top width=100% ><font size=1 face=verdana>"		rs.Open strSQLSelectProdList & " " & strSQL & " order by pv.DotsName;",cn,adOpenForwardOnly		LoopCount = 0		if rs.EOF and rs.BOF then			response.write "<font size=1 face=verdana>none</font>"		else			do while not rs.EOF				LoopCount =LoopCount+1				if LoopCount>1 then				Response.Write " , "				end if							if trim(request("lstProducts")) = trim(rs("ID")) then					Response.Write replace(rs("DotsName")," ","&nbsp;")					strListHeaderName = rs("DotsName") 				else					strNewQueryString = strQueryString & "&lstProducts=" & rs("ID")						if left(strNewQueryString,1) = "&" then						strNewQueryString = mid(strNewQueryString,2)				end if						'Response.Write "<a href=""HardwareMatrix.asp?lstCategory=" & request("lstCategory") & "&lstRoot=" & request("lstRoot") & "&lstProducts=" & rs("ID") & """>" & replace(rs("DotsName")," ","&nbsp;") & "</a>"					Response.Write "<a href=""HardwareMatrix.asp?" & strNewQueryString & """>" & replace(rs("DotsName")," ","&nbsp;") & "</a>"				end if				rs.MoveNext			loop		end if		rs.Close		Response.Write "</font></td>"	else		'Product Family		Response.Write "<TR>"		Response.Write "<TD valign=top><font size=1 face=verdana><b>Product&nbsp;Family:&nbsp;</b></font></TD><TD width=""100%"" ><font size=1 face=verdana>"		rs.Open strSQLSelectFamilyList & " " & strSQL & " order by f.name;",cn,adOpenForwardOnly		LoopCount = 0		if rs.EOF and rs.BOF then			response.write "<font size=1 face=verdana>none</font>"		else			do while not rs.EOF				LoopCount =LoopCount+1				if LoopCount>1 then				Response.Write " , "				end if							if trim(request("lstFamily")) = trim(rs("ID")) then					Response.Write replace(rs("Name")," ","&nbsp;")					strListHeaderName = rs("Name") 				else					strNewQueryString = strQueryString & "&lstFamily=" & rs("ID")						if left(strNewQueryString,1) = "&" then						strNewQueryString = mid(strNewQueryString,2)					end if	'				Response.Write "<a href=""HardwareMatrix.asp?lstCategory=" & request("lstCategory") & "&lstRoot=" & request("lstRoot") & "&lstFamily=" & rs("ID") & """>" & replace(rs("Name")," ","&nbsp;") & "</a>"					Response.Write "<a href=""HardwareMatrix.asp?" & strNewQueryString & """>" & replace(rs("Name")," ","&nbsp;") & "</a>"				end if				rs.MoveNext			loop		end if		rs.Close		Response.Write "</font></td>"	end if	'Close Filter Box	if strQueryString <> "" and strQueryString <> "ReportFormat=1"and strQueryString <> "ReportFormat=2" and strQueryString <> "ReportFormat=5" and strQueryString <> "ReportFormat=3"and strQueryString <> "ReportFormat=4" then		Response.Write "<TD rowspan=2 aligh=right valign=top><a href=""javascript: SwitchFilterView(2);""><IMG border=0 SRC=""../images/X2.gif""></a></TD>"	end if	Response.Write "</TR>"		'Product Phase		Response.Write "<TR>"		Response.Write "<TD valign=top><font size=1 face=verdana><b>Product&nbsp;Phase:"		Response.write "&nbsp;</b></font></TD><TD><font size=1 face=verdana>"'		rs.Open strSQLSelectPhaseList & " " &  strSQl & " order by ps.id;",cn,adOpenForwardOnly		rs.Open "Select ID,Name as Phase from productstatus with (NOLOCK) where id <> 5 order by id;"		loopcount=0		do while not rs.EOF			if loopcount > 0 then				response.write ", " 			end if			if trim(request("lstPhase")) = trim(rs("ID")) then				strListHeaderName = rs("Phase") 				Response.Write replace(replace(rs("Phase")&""," ","&nbsp;"),"-","&#8209;")			else				strNewQueryString = StripParameter(strQueryString,"lstPhase") & "&lstPhase=" & rs("ID")					if left(strNewQueryString,1) = "&" then					strNewQueryString = mid(strNewQueryString,2)				end if				Response.Write "<a href=""HardwareMatrix.asp?" & strNewQueryString & """>"				Response.Write  replace(replace(rs("Phase")&""," ","&nbsp;"),"-","&#8209;")				Response.Write "</a>"			end if			loopcount=loopcount+1			rs.MoveNext		loop		rs.Close				Response.write "</td></tr>"	if isnumeric(request("lstCategory")) and request("lstCategory") <> "" then		'Component for selected Category		Response.Write "<TR>"		Response.Write "<TD valign=top><font size=1 face=verdana><b>"		if request("ReportFormat")="2" or request("ReportFormat")="5" then			Response.write "Subassembly:"		else			Response.write "Root&nbsp;Deliverable:"		end if		Response.write "&nbsp;</b></font></TD><TD><font size=1 face=verdana>"			 		rs.Open strSQLSelectDelList & " " &  strSQl & " order by r.name;",cn,adOpenForwardOnly		LoopCount = 0		if rs.EOF and rs.BOF then			response.write "<font size=1 face=verdana>none</font>"		else			do while not rs.EOF				LoopCount =LoopCount+1				if LoopCount>1 then					Response.Write " , "				end if							if trim(request("lstRoot")) = trim(rs("ID")) or (trim(request("lstSubassembly")) = trim(rs("Subassembly")) and trim(request("lstSubassembly")) <> "") then					if request("ReportFormat")="2" or request("ReportFormat")="5" then						strListHeaderName = rs("Subassembly") 						Response.Write replace(replace(rs("Subassembly")&""," ","&nbsp;"),"-","&#8209;")					else						strListHeaderName = rs("Name") 						Response.Write replace(replace(rs("Name")&""," ","&nbsp;"),"-","&#8209;")					end if				else					if request("ReportFormat")="2" or request("ReportFormat")="5" then						strNewQueryString = strQueryString & "&lstSubassembly=" & rs("Subassembly")							if left(strNewQueryString,1) = "&" then							strNewQueryString = mid(strNewQueryString,2)						end if					else						strNewQueryString = strQueryString & "&lstRoot=" & rs("ID")							if left(strNewQueryString,1) = "&" then							strNewQueryString = mid(strNewQueryString,2)						end if					end if				'	Response.Write "<a href=""HardwareMatrix.asp?lstFamily=" & request("lstFamily") & "&lstProducts=" & request("lstProducts") & "&lstRoot=" & rs("ID") & """>" & replace(replace(rs("Name")," ","&nbsp;"),"-","&#8209;") & "</a>"					Response.Write "<a href=""HardwareMatrix.asp?" & strNewQueryString & """>"					if request("ReportFormat")="2" or request("ReportFormat")="5" then						Response.Write  replace(replace(rs("Subassembly")&""," ","&nbsp;"),"-","&#8209;")					else						Response.Write  replace(replace(rs("Name")&""," ","&nbsp;"),"-","&#8209;")					end if						Response.Write "</a>"				end if				rs.MoveNext			loop		end if		rs.Close		Response.Write "</font></td>"		Response.Write "</TR>"	else			'Category		Response.Write "<TR>"		Response.Write "<TD valign=top><font size=1 face=verdana><b>Category:&nbsp;</b></font></TD><TD  width=100% ><font size=1 face=verdana>"	'	Response.Write strSQLSelectCatList & " " & strSQL 	'	Response.Flush		if not blnFiltersSelected then			rs.Open "Select ID, Name from deliverablecategory with (NOLOCK) where deliverabletypeid=1 order by name;",cn,adOpenForwardOnly		else			rs.Open strSQLSelectCatList & " " & strSQL & " order by c.name;",cn,adOpenForwardOnly		end if		LoopCount = 0		if rs.EOF and rs.BOF then			response.write "<font size=1 face=verdana>none</font>"		else			do while not rs.EOF				LoopCount =LoopCount+1				if LoopCount>1 then					Response.Write " , "				end if							if request("lstCategory") = rs("ID") then					Response.Write replace(rs("Name")," ","&nbsp;")					strListHeaderName = rs("Name") 				else					strNewQueryString = strQueryString & "&lstCategory=" & rs("ID")					if left(strNewQueryString,1) = "&" then						strNewQueryString = mid(strNewQueryString,2)					end if	'				Response.Write "<a href=""HardwareMatrix.asp?lstFamily=" & request("lstFamily") & "&lstProducts=" & request("lstProducts") & "&lstCategory=" & rs("ID") & """>" & replace(rs("Name")," ","&nbsp;") & "</a>"					Response.Write "<a href=""HardwareMatrix.asp?" & strNewQueryString & """>" & replace(rs("Name")," ","&nbsp;") & "</a>"				end if				rs.MoveNext			loop		end if		rs.Close		Response.Write "</font></td>"		Response.Write "</TR>"	end if		Response.Write "</table>"	Response.Write "</td></tr>"	Response.Write "</table>"	Response.Write "</TD>"	Response.Write "</TR>"	Response.Write "</table>"	Response.Write "<BR></div>"end subfunction ScrubSQL(strWords) 	dim badChars 	dim newChars 	dim i	strWords=replace(strWords,"'","''")		badChars = array("select", "drop", ";", "--", "insert", "delete", "xp_", "union", "update") 	newChars = strWords 		for i = 0 to uBound(badChars) 		newChars = replace(newChars, badChars(i), "") 	next 		ScrubSQL = newChars end function function FormatInputStrings()	dim strBuffer	dim BufferArray	dim strItem	dim strLastParam	dim ItemArray	dim strOutBuffer	strOutBuffer = ""	strBuffer = Request.Form	if trim(strBuffer) <> "" then		strBuffer = strBuffer & "&"	end if	strBuffer = strBuffer & strQueryString			BufferArray = split(strBuffer,"&")'		'		strLastParam = ""	for each strItem in BufferArray		ItemArray = split(strItem,"=")		if ubound(ItemArray) > 0 then			if strLastParam <> trim(ItemArray(0)) then				if trim(request(trim(ItemArray(0)))) <> "" then					if lcase(trim(ItemArray(0))) <> "txtdivision" and lcase(trim(ItemArray(0))) <> "cboprofile" and lcase(trim(ItemArray(0))) <> "chknamesearch" and lcase(trim(ItemArray(0))) <> "cboformat" then						strOutBuffer = strOutBuffer & "&" & trim(ItemArray(0)) & "=" & request(trim(ItemArray(0)))					end if				end if			end if		strLastParam = trim(ItemArray(0))		end if	next		if len(strOutBuffer) > 0 then		strOutbuffer = replace(mid(strOutBuffer,2),", ",",")	end if	FormatInputStrings =  strOutBufferend functionfunction StripParameter(strQuery,strName)	dim ParameterArray	dim strParameter	dim strOutput		ParameterArray = split(strQuery,"&")	strOutput = ""	for each strParameter in ParameterArray		if instr(lcase(strParameter),lcase(strName)) = 0 then			strOutput = strOutput & "&" & strParameter		end if	next		if strOutput <> "" then		strOutput = mid(strOutput,2)	end if		StripParameter = strOutput	end functionfunction AddDateRangeToQuery()  dim strFieldName  dim strQuery    strQuery = ""  strFieldName = "l.Updated"  if (request("DateStart") <> "") and (request("DateEnd") <> "") then     strQuery = " and " & strFieldName & " between '" & request("DateStart") & "' and '" & request("DateEnd") & "' "  end if   if (request("DateStart") <> "") and (request("DateEnd") = "") then     strQuery = " and '" & request("DateStart") & "' <= " & strFieldName & " "  end if   if (request("DateStart") = "") and (request("DateEnd") <> "") then     strQuery = " and " & strFieldName & " <= '" & request("DateEnd") & "' "  end if   AddDateRangeToQuery = strQuery  end function%>